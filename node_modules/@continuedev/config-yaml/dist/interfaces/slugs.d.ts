export interface PackageSlug {
    ownerSlug: string;
    packageSlug: string;
}
export interface FullSlug extends PackageSlug {
    versionSlug: string;
}
interface BasePackageIdentifier {
    uriType: "file" | "slug";
}
interface FullSlugIdentifier extends BasePackageIdentifier {
    uriType: "slug";
    fullSlug: FullSlug;
}
interface FileIdentifier extends BasePackageIdentifier {
    uriType: "file";
    filePath: string;
}
export type PackageIdentifier = FullSlugIdentifier | FileIdentifier;
export declare function packageIdentifierToDisplayName(id: PackageIdentifier): string;
export declare function encodePackageIdentifier(identifier: PackageIdentifier): string;
export declare function decodePackageIdentifier(identifier: string): PackageIdentifier;
export declare enum VirtualTags {
    Latest = "latest"
}
export declare function encodePackageSlug(packageSlug: PackageSlug): string;
export declare function decodePackageSlug(pkgSlug: string): PackageSlug;
export declare function encodeFullSlug(fullSlug: FullSlug): string;
export declare function packageSlugsEqual(pkgSlug1: PackageSlug, pkgSlug2: PackageSlug): boolean;
export declare function decodeFullSlug(fullSlug: string): FullSlug;
/**
 * FQSN = Fully Qualified Secret Name
 */
export interface FQSN {
    packageSlugs: PackageSlug[];
    secretName: string;
}
export declare function encodeFQSN(fqsn: FQSN): string;
export declare function decodeFQSN(fqsn: string): FQSN;
export {};
