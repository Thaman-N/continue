import * as z from "zod";
export declare const contextSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    provider: z.ZodString;
    params: z.ZodOptional<z.ZodAny>;
}, "strip", z.ZodTypeAny, {
    provider: string;
    params?: any;
    name?: string | undefined;
}, {
    provider: string;
    params?: any;
    name?: string | undefined;
}>;
declare const mcpServerSchema: z.ZodObject<{
    name: z.ZodString;
    command: z.ZodOptional<z.ZodString>;
    type: z.ZodOptional<z.ZodEnum<["sse", "stdio", "streamable-http"]>>;
    url: z.ZodOptional<z.ZodString>;
    faviconUrl: z.ZodOptional<z.ZodString>;
    args: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    cwd: z.ZodOptional<z.ZodString>;
    connectionTimeout: z.ZodOptional<z.ZodNumber>;
    requestOptions: z.ZodOptional<z.ZodObject<{
        timeout: z.ZodOptional<z.ZodNumber>;
        verifySsl: z.ZodOptional<z.ZodBoolean>;
        caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        proxy: z.ZodOptional<z.ZodString>;
        headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        clientCertificate: z.ZodOptional<z.ZodObject<{
            cert: z.ZodString;
            key: z.ZodString;
            passphrase: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            cert: string;
            key: string;
            passphrase?: string | undefined;
        }, {
            cert: string;
            key: string;
            passphrase?: string | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        timeout?: number | undefined;
        verifySsl?: boolean | undefined;
        caBundlePath?: string | string[] | undefined;
        proxy?: string | undefined;
        headers?: Record<string, string> | undefined;
        extraBodyProperties?: Record<string, any> | undefined;
        noProxy?: string[] | undefined;
        clientCertificate?: {
            cert: string;
            key: string;
            passphrase?: string | undefined;
        } | undefined;
    }, {
        timeout?: number | undefined;
        verifySsl?: boolean | undefined;
        caBundlePath?: string | string[] | undefined;
        proxy?: string | undefined;
        headers?: Record<string, string> | undefined;
        extraBodyProperties?: Record<string, any> | undefined;
        noProxy?: string[] | undefined;
        clientCertificate?: {
            cert: string;
            key: string;
            passphrase?: string | undefined;
        } | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    name: string;
    type?: "sse" | "stdio" | "streamable-http" | undefined;
    url?: string | undefined;
    requestOptions?: {
        timeout?: number | undefined;
        verifySsl?: boolean | undefined;
        caBundlePath?: string | string[] | undefined;
        proxy?: string | undefined;
        headers?: Record<string, string> | undefined;
        extraBodyProperties?: Record<string, any> | undefined;
        noProxy?: string[] | undefined;
        clientCertificate?: {
            cert: string;
            key: string;
            passphrase?: string | undefined;
        } | undefined;
    } | undefined;
    env?: Record<string, string> | undefined;
    command?: string | undefined;
    faviconUrl?: string | undefined;
    args?: string[] | undefined;
    cwd?: string | undefined;
    connectionTimeout?: number | undefined;
}, {
    name: string;
    type?: "sse" | "stdio" | "streamable-http" | undefined;
    url?: string | undefined;
    requestOptions?: {
        timeout?: number | undefined;
        verifySsl?: boolean | undefined;
        caBundlePath?: string | string[] | undefined;
        proxy?: string | undefined;
        headers?: Record<string, string> | undefined;
        extraBodyProperties?: Record<string, any> | undefined;
        noProxy?: string[] | undefined;
        clientCertificate?: {
            cert: string;
            key: string;
            passphrase?: string | undefined;
        } | undefined;
    } | undefined;
    env?: Record<string, string> | undefined;
    command?: string | undefined;
    faviconUrl?: string | undefined;
    args?: string[] | undefined;
    cwd?: string | undefined;
    connectionTimeout?: number | undefined;
}>;
export type MCPServer = z.infer<typeof mcpServerSchema>;
declare const promptSchema: z.ZodObject<{
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    prompt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    name: string;
    prompt: string;
    description?: string | undefined;
}, {
    name: string;
    prompt: string;
    description?: string | undefined;
}>;
export type Prompt = z.infer<typeof promptSchema>;
declare const docSchema: z.ZodObject<{
    name: z.ZodString;
    startUrl: z.ZodString;
    rootUrl: z.ZodOptional<z.ZodString>;
    faviconUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name: string;
    startUrl: string;
    faviconUrl?: string | undefined;
    rootUrl?: string | undefined;
}, {
    name: string;
    startUrl: string;
    faviconUrl?: string | undefined;
    rootUrl?: string | undefined;
}>;
export type DocsConfig = z.infer<typeof docSchema>;
declare const ruleObjectSchema: z.ZodObject<{
    name: z.ZodString;
    rule: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    globs: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    regex: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    alwaysApply: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    name: string;
    rule: string;
    regex?: string | string[] | undefined;
    description?: string | undefined;
    globs?: string | string[] | undefined;
    alwaysApply?: boolean | undefined;
}, {
    name: string;
    rule: string;
    regex?: string | string[] | undefined;
    description?: string | undefined;
    globs?: string | string[] | undefined;
    alwaysApply?: boolean | undefined;
}>;
declare const ruleSchema: z.ZodUnion<[z.ZodString, z.ZodObject<{
    name: z.ZodString;
    rule: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    globs: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    regex: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    alwaysApply: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    name: string;
    rule: string;
    regex?: string | string[] | undefined;
    description?: string | undefined;
    globs?: string | string[] | undefined;
    alwaysApply?: boolean | undefined;
}, {
    name: string;
    rule: string;
    regex?: string | string[] | undefined;
    description?: string | undefined;
    globs?: string | string[] | undefined;
    alwaysApply?: boolean | undefined;
}>]>;
/**
 * A schema for rules.json files
 */
export declare const rulesJsonSchema: z.ZodObject<{
    name: z.ZodString;
    version: z.ZodString;
    author: z.ZodOptional<z.ZodString>;
    license: z.ZodOptional<z.ZodString>;
    rules: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    name: string;
    version: string;
    author?: string | undefined;
    license?: string | undefined;
    rules?: Record<string, string> | undefined;
}, {
    name: string;
    version: string;
    author?: string | undefined;
    license?: string | undefined;
    rules?: Record<string, string> | undefined;
}>;
export type Rule = z.infer<typeof ruleSchema>;
export type RuleObject = z.infer<typeof ruleObjectSchema>;
/**
 * A schema for rules.json files
 */
export type RulesJson = z.infer<typeof rulesJsonSchema>;
export declare const blockItemWrapperSchema: <T extends z.AnyZodObject>(schema: T, usesSchema?: z.ZodTypeAny) => z.ZodObject<{
    uses: z.ZodTypeAny;
    with: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    override: z.ZodOptional<z.ZodObject<{
        [x: string]: z.ZodOptional<any>;
    }, any, any, {
        [x: string]: any;
    }, {
        [x: string]: any;
    }>>;
}, "strip", z.ZodTypeAny, {
    with?: Record<string, string> | undefined;
    uses?: any;
    override?: {
        [x: string]: any;
    } | undefined;
}, {
    with?: Record<string, string> | undefined;
    uses?: any;
    override?: {
        [x: string]: any;
    } | undefined;
}>;
export declare const blockOrSchema: <T extends z.AnyZodObject>(schema: T, usesSchema?: z.ZodTypeAny) => z.ZodUnion<[T, z.ZodObject<{
    uses: z.ZodTypeAny;
    with: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    override: z.ZodOptional<z.ZodObject<{
        [x: string]: z.ZodOptional<any>;
    }, any, any, {
        [x: string]: any;
    }, {
        [x: string]: any;
    }>>;
}, "strip", z.ZodTypeAny, {
    with?: Record<string, string> | undefined;
    uses?: any;
    override?: {
        [x: string]: any;
    } | undefined;
}, {
    with?: Record<string, string> | undefined;
    uses?: any;
    override?: {
        [x: string]: any;
    } | undefined;
}>]>;
export declare const commonMetadataSchema: z.ZodObject<{
    tags: z.ZodOptional<z.ZodString>;
    sourceCodeUrl: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    author: z.ZodOptional<z.ZodString>;
    license: z.ZodOptional<z.ZodString>;
    iconUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    author?: string | undefined;
    license?: string | undefined;
    tags?: string | undefined;
    sourceCodeUrl?: string | undefined;
    iconUrl?: string | undefined;
}, {
    description?: string | undefined;
    author?: string | undefined;
    license?: string | undefined;
    tags?: string | undefined;
    sourceCodeUrl?: string | undefined;
    iconUrl?: string | undefined;
}>;
export declare const baseConfigYamlSchema: z.ZodObject<{
    name: z.ZodString;
    version: z.ZodString;
    schema: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodIntersection<z.ZodRecord<z.ZodString, z.ZodString>, z.ZodObject<{
        tags: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        sourceCodeUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        author: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        license: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        iconUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }, {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    name: string;
    version: string;
    schema?: string | undefined;
    metadata?: (Record<string, string> & {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }) | undefined;
}, {
    name: string;
    version: string;
    schema?: string | undefined;
    metadata?: (Record<string, string> & {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }) | undefined;
}>;
export declare const configYamlSchema: z.ZodObject<z.objectUtil.extendShape<{
    name: z.ZodString;
    version: z.ZodString;
    schema: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodIntersection<z.ZodRecord<z.ZodString, z.ZodString>, z.ZodObject<{
        tags: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        sourceCodeUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        author: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        license: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        iconUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }, {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }>>>;
}, {
    models: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        provider: z.ZodLiteral<"continue-proxy">;
        apiKeyLocation: z.ZodOptional<z.ZodString>;
        envSecretLocations: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        orgScopeId: z.ZodNullable<z.ZodString>;
        onPremProxyUrl: z.ZodNullable<z.ZodString>;
        name: z.ZodString;
        model: z.ZodString;
        apiKey: z.ZodOptional<z.ZodString>;
        apiBase: z.ZodOptional<z.ZodString>;
        maxStopWords: z.ZodOptional<z.ZodNumber>;
        roles: z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>;
        capabilities: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>;
        defaultCompletionOptions: z.ZodOptional<z.ZodObject<{
            contextLength: z.ZodOptional<z.ZodNumber>;
            maxTokens: z.ZodOptional<z.ZodNumber>;
            temperature: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
            minP: z.ZodOptional<z.ZodNumber>;
            presencePenalty: z.ZodOptional<z.ZodNumber>;
            frequencyPenalty: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            n: z.ZodOptional<z.ZodNumber>;
            reasoning: z.ZodOptional<z.ZodBoolean>;
            reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
            promptCaching: z.ZodOptional<z.ZodBoolean>;
            stream: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }>>;
        cacheBehavior: z.ZodOptional<z.ZodObject<{
            cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
            cacheConversation: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }>>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        embedOptions: z.ZodOptional<z.ZodObject<{
            maxChunkSize: z.ZodOptional<z.ZodNumber>;
            maxBatchSize: z.ZodOptional<z.ZodNumber>;
            embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }>>;
        chatOptions: z.ZodOptional<z.ZodObject<{
            baseSystemMessage: z.ZodOptional<z.ZodString>;
            baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
            basePlanSystemMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }>>;
        promptTemplates: z.ZodOptional<z.ZodObject<{
            apply: z.ZodOptional<z.ZodString>;
            chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
            edit: z.ZodOptional<z.ZodString>;
            autocomplete: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }>>;
        useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>;
        autocompleteOptions: z.ZodOptional<z.ZodObject<{
            disable: z.ZodOptional<z.ZodBoolean>;
            maxPromptTokens: z.ZodOptional<z.ZodNumber>;
            debounceDelay: z.ZodOptional<z.ZodNumber>;
            modelTimeout: z.ZodOptional<z.ZodNumber>;
            maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
            prefixPercentage: z.ZodOptional<z.ZodNumber>;
            template: z.ZodOptional<z.ZodString>;
            onlyMyCode: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }, {
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }>, z.ZodObject<{
        provider: z.ZodEffects<z.ZodString, string, string>;
        name: z.ZodString;
        model: z.ZodString;
        apiKey: z.ZodOptional<z.ZodString>;
        apiBase: z.ZodOptional<z.ZodString>;
        maxStopWords: z.ZodOptional<z.ZodNumber>;
        roles: z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>;
        capabilities: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>;
        defaultCompletionOptions: z.ZodOptional<z.ZodObject<{
            contextLength: z.ZodOptional<z.ZodNumber>;
            maxTokens: z.ZodOptional<z.ZodNumber>;
            temperature: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
            minP: z.ZodOptional<z.ZodNumber>;
            presencePenalty: z.ZodOptional<z.ZodNumber>;
            frequencyPenalty: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            n: z.ZodOptional<z.ZodNumber>;
            reasoning: z.ZodOptional<z.ZodBoolean>;
            reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
            promptCaching: z.ZodOptional<z.ZodBoolean>;
            stream: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }>>;
        cacheBehavior: z.ZodOptional<z.ZodObject<{
            cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
            cacheConversation: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }>>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        embedOptions: z.ZodOptional<z.ZodObject<{
            maxChunkSize: z.ZodOptional<z.ZodNumber>;
            maxBatchSize: z.ZodOptional<z.ZodNumber>;
            embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }>>;
        chatOptions: z.ZodOptional<z.ZodObject<{
            baseSystemMessage: z.ZodOptional<z.ZodString>;
            baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
            basePlanSystemMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }>>;
        promptTemplates: z.ZodOptional<z.ZodObject<{
            apply: z.ZodOptional<z.ZodString>;
            chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
            edit: z.ZodOptional<z.ZodString>;
            autocomplete: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }>>;
        useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>;
        autocompleteOptions: z.ZodOptional<z.ZodObject<{
            disable: z.ZodOptional<z.ZodBoolean>;
            maxPromptTokens: z.ZodOptional<z.ZodNumber>;
            debounceDelay: z.ZodOptional<z.ZodNumber>;
            modelTimeout: z.ZodOptional<z.ZodNumber>;
            maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
            prefixPercentage: z.ZodOptional<z.ZodNumber>;
            template: z.ZodOptional<z.ZodString>;
            onlyMyCode: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }, {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }>]>, z.ZodObject<{
        uses: z.ZodUnion<[z.ZodString, z.ZodEnum<[string, ...string[]]>]>;
        with: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        override: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            provider: z.ZodOptional<z.ZodLiteral<"continue-proxy">>;
            apiKeyLocation: z.ZodOptional<z.ZodOptional<z.ZodString>>;
            envSecretLocations: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>>;
            name: z.ZodOptional<z.ZodString>;
            model: z.ZodOptional<z.ZodString>;
            apiKey: z.ZodOptional<z.ZodOptional<z.ZodString>>;
            apiBase: z.ZodOptional<z.ZodOptional<z.ZodString>>;
            maxStopWords: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            roles: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>>;
            capabilities: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>>;
            defaultCompletionOptions: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                contextLength: z.ZodOptional<z.ZodNumber>;
                maxTokens: z.ZodOptional<z.ZodNumber>;
                temperature: z.ZodOptional<z.ZodNumber>;
                topP: z.ZodOptional<z.ZodNumber>;
                topK: z.ZodOptional<z.ZodNumber>;
                minP: z.ZodOptional<z.ZodNumber>;
                presencePenalty: z.ZodOptional<z.ZodNumber>;
                frequencyPenalty: z.ZodOptional<z.ZodNumber>;
                stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                n: z.ZodOptional<z.ZodNumber>;
                reasoning: z.ZodOptional<z.ZodBoolean>;
                reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
                promptCaching: z.ZodOptional<z.ZodBoolean>;
                stream: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            }, {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            }>>>;
            cacheBehavior: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
                cacheConversation: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            }, {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            }>>>;
            requestOptions: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                timeout: z.ZodOptional<z.ZodNumber>;
                verifySsl: z.ZodOptional<z.ZodBoolean>;
                caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
                proxy: z.ZodOptional<z.ZodString>;
                headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
                extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
                noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                clientCertificate: z.ZodOptional<z.ZodObject<{
                    cert: z.ZodString;
                    key: z.ZodString;
                    passphrase: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                }, {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            }, {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            }>>>;
            embedOptions: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                maxChunkSize: z.ZodOptional<z.ZodNumber>;
                maxBatchSize: z.ZodOptional<z.ZodNumber>;
                embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            }, {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            }>>>;
            chatOptions: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                baseSystemMessage: z.ZodOptional<z.ZodString>;
                baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
                basePlanSystemMessage: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            }, {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            }>>>;
            promptTemplates: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                apply: z.ZodOptional<z.ZodString>;
                chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
                edit: z.ZodOptional<z.ZodString>;
                autocomplete: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            }, {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            }>>>;
            useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            env: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>>;
            autocompleteOptions: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                disable: z.ZodOptional<z.ZodBoolean>;
                maxPromptTokens: z.ZodOptional<z.ZodNumber>;
                debounceDelay: z.ZodOptional<z.ZodNumber>;
                modelTimeout: z.ZodOptional<z.ZodNumber>;
                maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
                prefixPercentage: z.ZodOptional<z.ZodNumber>;
                template: z.ZodOptional<z.ZodString>;
                onlyMyCode: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            }, {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            provider?: "continue-proxy" | undefined;
            apiKeyLocation?: string | undefined;
            envSecretLocations?: Record<string, string> | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        }, {
            provider?: "continue-proxy" | undefined;
            apiKeyLocation?: string | undefined;
            envSecretLocations?: Record<string, string> | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        }>, z.ZodObject<{
            provider: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
            name: z.ZodOptional<z.ZodString>;
            model: z.ZodOptional<z.ZodString>;
            apiKey: z.ZodOptional<z.ZodOptional<z.ZodString>>;
            apiBase: z.ZodOptional<z.ZodOptional<z.ZodString>>;
            maxStopWords: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
            roles: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>>;
            capabilities: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>>;
            defaultCompletionOptions: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                contextLength: z.ZodOptional<z.ZodNumber>;
                maxTokens: z.ZodOptional<z.ZodNumber>;
                temperature: z.ZodOptional<z.ZodNumber>;
                topP: z.ZodOptional<z.ZodNumber>;
                topK: z.ZodOptional<z.ZodNumber>;
                minP: z.ZodOptional<z.ZodNumber>;
                presencePenalty: z.ZodOptional<z.ZodNumber>;
                frequencyPenalty: z.ZodOptional<z.ZodNumber>;
                stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                n: z.ZodOptional<z.ZodNumber>;
                reasoning: z.ZodOptional<z.ZodBoolean>;
                reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
                promptCaching: z.ZodOptional<z.ZodBoolean>;
                stream: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            }, {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            }>>>;
            cacheBehavior: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
                cacheConversation: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            }, {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            }>>>;
            requestOptions: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                timeout: z.ZodOptional<z.ZodNumber>;
                verifySsl: z.ZodOptional<z.ZodBoolean>;
                caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
                proxy: z.ZodOptional<z.ZodString>;
                headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
                extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
                noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                clientCertificate: z.ZodOptional<z.ZodObject<{
                    cert: z.ZodString;
                    key: z.ZodString;
                    passphrase: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                }, {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            }, {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            }>>>;
            embedOptions: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                maxChunkSize: z.ZodOptional<z.ZodNumber>;
                maxBatchSize: z.ZodOptional<z.ZodNumber>;
                embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            }, {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            }>>>;
            chatOptions: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                baseSystemMessage: z.ZodOptional<z.ZodString>;
                baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
                basePlanSystemMessage: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            }, {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            }>>>;
            promptTemplates: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                apply: z.ZodOptional<z.ZodString>;
                chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
                edit: z.ZodOptional<z.ZodString>;
                autocomplete: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            }, {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            }>>>;
            useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
            env: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>>;
            autocompleteOptions: z.ZodOptional<z.ZodOptional<z.ZodObject<{
                disable: z.ZodOptional<z.ZodBoolean>;
                maxPromptTokens: z.ZodOptional<z.ZodNumber>;
                debounceDelay: z.ZodOptional<z.ZodNumber>;
                modelTimeout: z.ZodOptional<z.ZodNumber>;
                maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
                prefixPercentage: z.ZodOptional<z.ZodNumber>;
                template: z.ZodOptional<z.ZodString>;
                onlyMyCode: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            }, {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            provider?: string | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        }, {
            provider?: string | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        uses: string;
        with?: Record<string, string> | undefined;
        override?: {
            provider?: "continue-proxy" | undefined;
            apiKeyLocation?: string | undefined;
            envSecretLocations?: Record<string, string> | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        } | {
            provider?: string | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        } | undefined;
    }, {
        uses: string;
        with?: Record<string, string> | undefined;
        override?: {
            provider?: "continue-proxy" | undefined;
            apiKeyLocation?: string | undefined;
            envSecretLocations?: Record<string, string> | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        } | {
            provider?: string | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        } | undefined;
    }>]>, "many">>;
    context: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        provider: z.ZodString;
        params: z.ZodOptional<z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        provider: string;
        params?: any;
        name?: string | undefined;
    }, {
        provider: string;
        params?: any;
        name?: string | undefined;
    }>, z.ZodObject<{
        uses: z.ZodTypeAny;
        with: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        override: z.ZodOptional<z.ZodObject<{
            [x: string]: z.ZodOptional<any>;
        }, any, any, {
            [x: string]: any;
        }, {
            [x: string]: any;
        }>>;
    }, "strip", z.ZodTypeAny, {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    }, {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    }>]>, "many">>;
    data: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
        name: z.ZodString;
        destination: z.ZodString;
        schema: z.ZodString;
        level: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"all">, z.ZodLiteral<"noCode">]>>;
        events: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        apiKey: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }, {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }>, z.ZodObject<{
        uses: z.ZodTypeAny;
        with: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        override: z.ZodOptional<z.ZodObject<{
            [x: string]: z.ZodOptional<any>;
        }, any, any, {
            [x: string]: any;
        }, {
            [x: string]: any;
        }>>;
    }, "strip", z.ZodTypeAny, {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    }, {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    }>]>, "many">>;
    mcpServers: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
        name: z.ZodString;
        command: z.ZodOptional<z.ZodString>;
        type: z.ZodOptional<z.ZodEnum<["sse", "stdio", "streamable-http"]>>;
        url: z.ZodOptional<z.ZodString>;
        faviconUrl: z.ZodOptional<z.ZodString>;
        args: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        cwd: z.ZodOptional<z.ZodString>;
        connectionTimeout: z.ZodOptional<z.ZodNumber>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }, {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }>, z.ZodObject<{
        uses: z.ZodTypeAny;
        with: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        override: z.ZodOptional<z.ZodObject<{
            [x: string]: z.ZodOptional<any>;
        }, any, any, {
            [x: string]: any;
        }, {
            [x: string]: any;
        }>>;
    }, "strip", z.ZodTypeAny, {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    }, {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    }>]>, "many">>;
    rules: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodObject<{
        name: z.ZodString;
        rule: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        globs: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        regex: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        alwaysApply: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }, {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }>]>, z.ZodObject<{
        uses: z.ZodString;
        with: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        uses: string;
        with?: Record<string, string> | undefined;
    }, {
        uses: string;
        with?: Record<string, string> | undefined;
    }>]>, "many">>;
    prompts: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        prompt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        prompt: string;
        description?: string | undefined;
    }, {
        name: string;
        prompt: string;
        description?: string | undefined;
    }>, z.ZodObject<{
        uses: z.ZodTypeAny;
        with: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        override: z.ZodOptional<z.ZodObject<{
            [x: string]: z.ZodOptional<any>;
        }, any, any, {
            [x: string]: any;
        }, {
            [x: string]: any;
        }>>;
    }, "strip", z.ZodTypeAny, {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    }, {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    }>]>, "many">>;
    docs: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
        name: z.ZodString;
        startUrl: z.ZodString;
        rootUrl: z.ZodOptional<z.ZodString>;
        faviconUrl: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }, {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }>, z.ZodObject<{
        uses: z.ZodTypeAny;
        with: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        override: z.ZodOptional<z.ZodObject<{
            [x: string]: z.ZodOptional<any>;
        }, any, any, {
            [x: string]: any;
        }, {
            [x: string]: any;
        }>>;
    }, "strip", z.ZodTypeAny, {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    }, {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    }>]>, "many">>;
}>, "strip", z.ZodTypeAny, {
    name: string;
    version: string;
    schema?: string | undefined;
    context?: ({
        provider: string;
        params?: any;
        name?: string | undefined;
    } | {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    })[] | undefined;
    rules?: (string | {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    } | {
        uses: string;
        with?: Record<string, string> | undefined;
    })[] | undefined;
    metadata?: (Record<string, string> & {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }) | undefined;
    models?: ({
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        uses: string;
        with?: Record<string, string> | undefined;
        override?: {
            provider?: "continue-proxy" | undefined;
            apiKeyLocation?: string | undefined;
            envSecretLocations?: Record<string, string> | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        } | {
            provider?: string | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        } | undefined;
    })[] | undefined;
    data?: ({
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    } | {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    })[] | undefined;
    mcpServers?: ({
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    } | {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    })[] | undefined;
    prompts?: ({
        name: string;
        prompt: string;
        description?: string | undefined;
    } | {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    })[] | undefined;
    docs?: ({
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    } | {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    })[] | undefined;
}, {
    name: string;
    version: string;
    schema?: string | undefined;
    context?: ({
        provider: string;
        params?: any;
        name?: string | undefined;
    } | {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    })[] | undefined;
    rules?: (string | {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    } | {
        uses: string;
        with?: Record<string, string> | undefined;
    })[] | undefined;
    metadata?: (Record<string, string> & {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }) | undefined;
    models?: ({
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        uses: string;
        with?: Record<string, string> | undefined;
        override?: {
            provider?: "continue-proxy" | undefined;
            apiKeyLocation?: string | undefined;
            envSecretLocations?: Record<string, string> | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        } | {
            provider?: string | undefined;
            name?: string | undefined;
            model?: string | undefined;
            apiKey?: string | undefined;
            apiBase?: string | undefined;
            maxStopWords?: number | undefined;
            roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
            capabilities?: ("tool_use" | "image_input")[] | undefined;
            defaultCompletionOptions?: {
                contextLength?: number | undefined;
                maxTokens?: number | undefined;
                temperature?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
                minP?: number | undefined;
                presencePenalty?: number | undefined;
                frequencyPenalty?: number | undefined;
                stop?: string[] | undefined;
                n?: number | undefined;
                reasoning?: boolean | undefined;
                reasoningBudgetTokens?: number | undefined;
                promptCaching?: boolean | undefined;
                stream?: boolean | undefined;
            } | undefined;
            cacheBehavior?: {
                cacheSystemMessage?: boolean | undefined;
                cacheConversation?: boolean | undefined;
            } | undefined;
            requestOptions?: {
                timeout?: number | undefined;
                verifySsl?: boolean | undefined;
                caBundlePath?: string | string[] | undefined;
                proxy?: string | undefined;
                headers?: Record<string, string> | undefined;
                extraBodyProperties?: Record<string, any> | undefined;
                noProxy?: string[] | undefined;
                clientCertificate?: {
                    cert: string;
                    key: string;
                    passphrase?: string | undefined;
                } | undefined;
            } | undefined;
            embedOptions?: {
                maxChunkSize?: number | undefined;
                maxBatchSize?: number | undefined;
                embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
            } | undefined;
            chatOptions?: {
                baseSystemMessage?: string | undefined;
                baseAgentSystemMessage?: string | undefined;
                basePlanSystemMessage?: string | undefined;
            } | undefined;
            promptTemplates?: {
                chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
                autocomplete?: string | undefined;
                edit?: string | undefined;
                apply?: string | undefined;
            } | undefined;
            useLegacyCompletionsEndpoint?: boolean | undefined;
            env?: Record<string, string | number | boolean> | undefined;
            autocompleteOptions?: {
                disable?: boolean | undefined;
                maxPromptTokens?: number | undefined;
                debounceDelay?: number | undefined;
                modelTimeout?: number | undefined;
                maxSuffixPercentage?: number | undefined;
                prefixPercentage?: number | undefined;
                template?: string | undefined;
                onlyMyCode?: boolean | undefined;
            } | undefined;
        } | undefined;
    })[] | undefined;
    data?: ({
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    } | {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    })[] | undefined;
    mcpServers?: ({
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    } | {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    })[] | undefined;
    prompts?: ({
        name: string;
        prompt: string;
        description?: string | undefined;
    } | {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    })[] | undefined;
    docs?: ({
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    } | {
        with?: Record<string, string> | undefined;
        uses?: any;
        override?: {
            [x: string]: any;
        } | undefined;
    })[] | undefined;
}>;
export type ConfigYaml = z.infer<typeof configYamlSchema>;
export declare const assistantUnrolledSchema: z.ZodObject<z.objectUtil.extendShape<{
    name: z.ZodString;
    version: z.ZodString;
    schema: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodIntersection<z.ZodRecord<z.ZodString, z.ZodString>, z.ZodObject<{
        tags: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        sourceCodeUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        author: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        license: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        iconUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }, {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }>>>;
}, {
    models: z.ZodOptional<z.ZodArray<z.ZodNullable<z.ZodUnion<[z.ZodObject<{
        provider: z.ZodLiteral<"continue-proxy">;
        apiKeyLocation: z.ZodOptional<z.ZodString>;
        envSecretLocations: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        orgScopeId: z.ZodNullable<z.ZodString>;
        onPremProxyUrl: z.ZodNullable<z.ZodString>;
        name: z.ZodString;
        model: z.ZodString;
        apiKey: z.ZodOptional<z.ZodString>;
        apiBase: z.ZodOptional<z.ZodString>;
        maxStopWords: z.ZodOptional<z.ZodNumber>;
        roles: z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>;
        capabilities: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>;
        defaultCompletionOptions: z.ZodOptional<z.ZodObject<{
            contextLength: z.ZodOptional<z.ZodNumber>;
            maxTokens: z.ZodOptional<z.ZodNumber>;
            temperature: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
            minP: z.ZodOptional<z.ZodNumber>;
            presencePenalty: z.ZodOptional<z.ZodNumber>;
            frequencyPenalty: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            n: z.ZodOptional<z.ZodNumber>;
            reasoning: z.ZodOptional<z.ZodBoolean>;
            reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
            promptCaching: z.ZodOptional<z.ZodBoolean>;
            stream: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }>>;
        cacheBehavior: z.ZodOptional<z.ZodObject<{
            cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
            cacheConversation: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }>>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        embedOptions: z.ZodOptional<z.ZodObject<{
            maxChunkSize: z.ZodOptional<z.ZodNumber>;
            maxBatchSize: z.ZodOptional<z.ZodNumber>;
            embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }>>;
        chatOptions: z.ZodOptional<z.ZodObject<{
            baseSystemMessage: z.ZodOptional<z.ZodString>;
            baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
            basePlanSystemMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }>>;
        promptTemplates: z.ZodOptional<z.ZodObject<{
            apply: z.ZodOptional<z.ZodString>;
            chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
            edit: z.ZodOptional<z.ZodString>;
            autocomplete: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }>>;
        useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>;
        autocompleteOptions: z.ZodOptional<z.ZodObject<{
            disable: z.ZodOptional<z.ZodBoolean>;
            maxPromptTokens: z.ZodOptional<z.ZodNumber>;
            debounceDelay: z.ZodOptional<z.ZodNumber>;
            modelTimeout: z.ZodOptional<z.ZodNumber>;
            maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
            prefixPercentage: z.ZodOptional<z.ZodNumber>;
            template: z.ZodOptional<z.ZodString>;
            onlyMyCode: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }, {
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }>, z.ZodObject<{
        provider: z.ZodEffects<z.ZodString, string, string>;
        name: z.ZodString;
        model: z.ZodString;
        apiKey: z.ZodOptional<z.ZodString>;
        apiBase: z.ZodOptional<z.ZodString>;
        maxStopWords: z.ZodOptional<z.ZodNumber>;
        roles: z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>;
        capabilities: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>;
        defaultCompletionOptions: z.ZodOptional<z.ZodObject<{
            contextLength: z.ZodOptional<z.ZodNumber>;
            maxTokens: z.ZodOptional<z.ZodNumber>;
            temperature: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
            minP: z.ZodOptional<z.ZodNumber>;
            presencePenalty: z.ZodOptional<z.ZodNumber>;
            frequencyPenalty: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            n: z.ZodOptional<z.ZodNumber>;
            reasoning: z.ZodOptional<z.ZodBoolean>;
            reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
            promptCaching: z.ZodOptional<z.ZodBoolean>;
            stream: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }>>;
        cacheBehavior: z.ZodOptional<z.ZodObject<{
            cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
            cacheConversation: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }>>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        embedOptions: z.ZodOptional<z.ZodObject<{
            maxChunkSize: z.ZodOptional<z.ZodNumber>;
            maxBatchSize: z.ZodOptional<z.ZodNumber>;
            embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }>>;
        chatOptions: z.ZodOptional<z.ZodObject<{
            baseSystemMessage: z.ZodOptional<z.ZodString>;
            baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
            basePlanSystemMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }>>;
        promptTemplates: z.ZodOptional<z.ZodObject<{
            apply: z.ZodOptional<z.ZodString>;
            chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
            edit: z.ZodOptional<z.ZodString>;
            autocomplete: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }>>;
        useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>;
        autocompleteOptions: z.ZodOptional<z.ZodObject<{
            disable: z.ZodOptional<z.ZodBoolean>;
            maxPromptTokens: z.ZodOptional<z.ZodNumber>;
            debounceDelay: z.ZodOptional<z.ZodNumber>;
            modelTimeout: z.ZodOptional<z.ZodNumber>;
            maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
            prefixPercentage: z.ZodOptional<z.ZodNumber>;
            template: z.ZodOptional<z.ZodString>;
            onlyMyCode: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }, {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }>]>>, "many">>;
    context: z.ZodOptional<z.ZodArray<z.ZodNullable<z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        provider: z.ZodString;
        params: z.ZodOptional<z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        provider: string;
        params?: any;
        name?: string | undefined;
    }, {
        provider: string;
        params?: any;
        name?: string | undefined;
    }>>, "many">>;
    data: z.ZodOptional<z.ZodArray<z.ZodNullable<z.ZodObject<{
        name: z.ZodString;
        destination: z.ZodString;
        schema: z.ZodString;
        level: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"all">, z.ZodLiteral<"noCode">]>>;
        events: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        apiKey: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }, {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }>>, "many">>;
    mcpServers: z.ZodOptional<z.ZodArray<z.ZodNullable<z.ZodObject<{
        name: z.ZodString;
        command: z.ZodOptional<z.ZodString>;
        type: z.ZodOptional<z.ZodEnum<["sse", "stdio", "streamable-http"]>>;
        url: z.ZodOptional<z.ZodString>;
        faviconUrl: z.ZodOptional<z.ZodString>;
        args: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        cwd: z.ZodOptional<z.ZodString>;
        connectionTimeout: z.ZodOptional<z.ZodNumber>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }, {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }>>, "many">>;
    rules: z.ZodOptional<z.ZodArray<z.ZodNullable<z.ZodUnion<[z.ZodString, z.ZodObject<{
        name: z.ZodString;
        rule: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        globs: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        regex: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        alwaysApply: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }, {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }>]>>, "many">>;
    prompts: z.ZodOptional<z.ZodArray<z.ZodNullable<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        prompt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        prompt: string;
        description?: string | undefined;
    }, {
        name: string;
        prompt: string;
        description?: string | undefined;
    }>>, "many">>;
    docs: z.ZodOptional<z.ZodArray<z.ZodNullable<z.ZodObject<{
        name: z.ZodString;
        startUrl: z.ZodString;
        rootUrl: z.ZodOptional<z.ZodString>;
        faviconUrl: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }, {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }>>, "many">>;
}>, "strip", z.ZodTypeAny, {
    name: string;
    version: string;
    schema?: string | undefined;
    context?: ({
        provider: string;
        params?: any;
        name?: string | undefined;
    } | null)[] | undefined;
    rules?: (string | {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    } | null)[] | undefined;
    metadata?: (Record<string, string> & {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }) | undefined;
    models?: ({
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | null)[] | undefined;
    data?: ({
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    } | null)[] | undefined;
    mcpServers?: ({
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    } | null)[] | undefined;
    prompts?: ({
        name: string;
        prompt: string;
        description?: string | undefined;
    } | null)[] | undefined;
    docs?: ({
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    } | null)[] | undefined;
}, {
    name: string;
    version: string;
    schema?: string | undefined;
    context?: ({
        provider: string;
        params?: any;
        name?: string | undefined;
    } | null)[] | undefined;
    rules?: (string | {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    } | null)[] | undefined;
    metadata?: (Record<string, string> & {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }) | undefined;
    models?: ({
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | null)[] | undefined;
    data?: ({
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    } | null)[] | undefined;
    mcpServers?: ({
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    } | null)[] | undefined;
    prompts?: ({
        name: string;
        prompt: string;
        description?: string | undefined;
    } | null)[] | undefined;
    docs?: ({
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    } | null)[] | undefined;
}>;
export type AssistantUnrolled = z.infer<typeof assistantUnrolledSchema>;
export declare const assistantUnrolledSchemaNonNullable: z.ZodObject<z.objectUtil.extendShape<{
    name: z.ZodString;
    version: z.ZodString;
    schema: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodIntersection<z.ZodRecord<z.ZodString, z.ZodString>, z.ZodObject<{
        tags: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        sourceCodeUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        author: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        license: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        iconUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }, {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }>>>;
}, {
    models: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
        provider: z.ZodLiteral<"continue-proxy">;
        apiKeyLocation: z.ZodOptional<z.ZodString>;
        envSecretLocations: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        orgScopeId: z.ZodNullable<z.ZodString>;
        onPremProxyUrl: z.ZodNullable<z.ZodString>;
        name: z.ZodString;
        model: z.ZodString;
        apiKey: z.ZodOptional<z.ZodString>;
        apiBase: z.ZodOptional<z.ZodString>;
        maxStopWords: z.ZodOptional<z.ZodNumber>;
        roles: z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>;
        capabilities: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>;
        defaultCompletionOptions: z.ZodOptional<z.ZodObject<{
            contextLength: z.ZodOptional<z.ZodNumber>;
            maxTokens: z.ZodOptional<z.ZodNumber>;
            temperature: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
            minP: z.ZodOptional<z.ZodNumber>;
            presencePenalty: z.ZodOptional<z.ZodNumber>;
            frequencyPenalty: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            n: z.ZodOptional<z.ZodNumber>;
            reasoning: z.ZodOptional<z.ZodBoolean>;
            reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
            promptCaching: z.ZodOptional<z.ZodBoolean>;
            stream: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }>>;
        cacheBehavior: z.ZodOptional<z.ZodObject<{
            cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
            cacheConversation: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }>>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        embedOptions: z.ZodOptional<z.ZodObject<{
            maxChunkSize: z.ZodOptional<z.ZodNumber>;
            maxBatchSize: z.ZodOptional<z.ZodNumber>;
            embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }>>;
        chatOptions: z.ZodOptional<z.ZodObject<{
            baseSystemMessage: z.ZodOptional<z.ZodString>;
            baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
            basePlanSystemMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }>>;
        promptTemplates: z.ZodOptional<z.ZodObject<{
            apply: z.ZodOptional<z.ZodString>;
            chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
            edit: z.ZodOptional<z.ZodString>;
            autocomplete: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }>>;
        useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>;
        autocompleteOptions: z.ZodOptional<z.ZodObject<{
            disable: z.ZodOptional<z.ZodBoolean>;
            maxPromptTokens: z.ZodOptional<z.ZodNumber>;
            debounceDelay: z.ZodOptional<z.ZodNumber>;
            modelTimeout: z.ZodOptional<z.ZodNumber>;
            maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
            prefixPercentage: z.ZodOptional<z.ZodNumber>;
            template: z.ZodOptional<z.ZodString>;
            onlyMyCode: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }, {
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }>, z.ZodObject<{
        provider: z.ZodEffects<z.ZodString, string, string>;
        name: z.ZodString;
        model: z.ZodString;
        apiKey: z.ZodOptional<z.ZodString>;
        apiBase: z.ZodOptional<z.ZodString>;
        maxStopWords: z.ZodOptional<z.ZodNumber>;
        roles: z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>;
        capabilities: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>;
        defaultCompletionOptions: z.ZodOptional<z.ZodObject<{
            contextLength: z.ZodOptional<z.ZodNumber>;
            maxTokens: z.ZodOptional<z.ZodNumber>;
            temperature: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
            minP: z.ZodOptional<z.ZodNumber>;
            presencePenalty: z.ZodOptional<z.ZodNumber>;
            frequencyPenalty: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            n: z.ZodOptional<z.ZodNumber>;
            reasoning: z.ZodOptional<z.ZodBoolean>;
            reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
            promptCaching: z.ZodOptional<z.ZodBoolean>;
            stream: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }>>;
        cacheBehavior: z.ZodOptional<z.ZodObject<{
            cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
            cacheConversation: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }>>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        embedOptions: z.ZodOptional<z.ZodObject<{
            maxChunkSize: z.ZodOptional<z.ZodNumber>;
            maxBatchSize: z.ZodOptional<z.ZodNumber>;
            embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }>>;
        chatOptions: z.ZodOptional<z.ZodObject<{
            baseSystemMessage: z.ZodOptional<z.ZodString>;
            baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
            basePlanSystemMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }>>;
        promptTemplates: z.ZodOptional<z.ZodObject<{
            apply: z.ZodOptional<z.ZodString>;
            chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
            edit: z.ZodOptional<z.ZodString>;
            autocomplete: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }>>;
        useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>;
        autocompleteOptions: z.ZodOptional<z.ZodObject<{
            disable: z.ZodOptional<z.ZodBoolean>;
            maxPromptTokens: z.ZodOptional<z.ZodNumber>;
            debounceDelay: z.ZodOptional<z.ZodNumber>;
            modelTimeout: z.ZodOptional<z.ZodNumber>;
            maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
            prefixPercentage: z.ZodOptional<z.ZodNumber>;
            template: z.ZodOptional<z.ZodString>;
            onlyMyCode: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }, {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }>]>, "many">>;
    context: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        provider: z.ZodString;
        params: z.ZodOptional<z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        provider: string;
        params?: any;
        name?: string | undefined;
    }, {
        provider: string;
        params?: any;
        name?: string | undefined;
    }>, "many">>;
    data: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        destination: z.ZodString;
        schema: z.ZodString;
        level: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"all">, z.ZodLiteral<"noCode">]>>;
        events: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        apiKey: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }, {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }>, "many">>;
    mcpServers: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        command: z.ZodOptional<z.ZodString>;
        type: z.ZodOptional<z.ZodEnum<["sse", "stdio", "streamable-http"]>>;
        url: z.ZodOptional<z.ZodString>;
        faviconUrl: z.ZodOptional<z.ZodString>;
        args: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        cwd: z.ZodOptional<z.ZodString>;
        connectionTimeout: z.ZodOptional<z.ZodNumber>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }, {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }>, "many">>;
    rules: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodObject<{
        name: z.ZodString;
        rule: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        globs: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        regex: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        alwaysApply: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }, {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }>]>, "many">>;
    prompts: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        prompt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        prompt: string;
        description?: string | undefined;
    }, {
        name: string;
        prompt: string;
        description?: string | undefined;
    }>, "many">>;
    docs: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        startUrl: z.ZodString;
        rootUrl: z.ZodOptional<z.ZodString>;
        faviconUrl: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }, {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }>, "many">>;
}>, "strip", z.ZodTypeAny, {
    name: string;
    version: string;
    schema?: string | undefined;
    context?: {
        provider: string;
        params?: any;
        name?: string | undefined;
    }[] | undefined;
    rules?: (string | {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    })[] | undefined;
    metadata?: (Record<string, string> & {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }) | undefined;
    models?: ({
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    })[] | undefined;
    data?: {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }[] | undefined;
    mcpServers?: {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }[] | undefined;
    prompts?: {
        name: string;
        prompt: string;
        description?: string | undefined;
    }[] | undefined;
    docs?: {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }[] | undefined;
}, {
    name: string;
    version: string;
    schema?: string | undefined;
    context?: {
        provider: string;
        params?: any;
        name?: string | undefined;
    }[] | undefined;
    rules?: (string | {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    })[] | undefined;
    metadata?: (Record<string, string> & {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }) | undefined;
    models?: ({
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    })[] | undefined;
    data?: {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }[] | undefined;
    mcpServers?: {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }[] | undefined;
    prompts?: {
        name: string;
        prompt: string;
        description?: string | undefined;
    }[] | undefined;
    docs?: {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }[] | undefined;
}>;
export type AssistantUnrolledNonNullable = z.infer<typeof assistantUnrolledSchemaNonNullable>;
export declare const isAssistantUnrolledNonNullable: (a: AssistantUnrolled) => a is AssistantUnrolledNonNullable;
export declare const blockSchema: z.ZodIntersection<z.ZodObject<{
    name: z.ZodString;
    version: z.ZodString;
    schema: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodIntersection<z.ZodRecord<z.ZodString, z.ZodString>, z.ZodObject<{
        tags: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        sourceCodeUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        author: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        license: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        iconUrl: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }, {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    name: string;
    version: string;
    schema?: string | undefined;
    metadata?: (Record<string, string> & {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }) | undefined;
}, {
    name: string;
    version: string;
    schema?: string | undefined;
    metadata?: (Record<string, string> & {
        description?: string | undefined;
        author?: string | undefined;
        license?: string | undefined;
        tags?: string | undefined;
        sourceCodeUrl?: string | undefined;
        iconUrl?: string | undefined;
    }) | undefined;
}>, z.ZodUnion<[z.ZodObject<{
    models: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        provider: z.ZodLiteral<"continue-proxy">;
        apiKeyLocation: z.ZodOptional<z.ZodString>;
        envSecretLocations: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        orgScopeId: z.ZodNullable<z.ZodString>;
        onPremProxyUrl: z.ZodNullable<z.ZodString>;
        name: z.ZodString;
        model: z.ZodString;
        apiKey: z.ZodOptional<z.ZodString>;
        apiBase: z.ZodOptional<z.ZodString>;
        maxStopWords: z.ZodOptional<z.ZodNumber>;
        roles: z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>;
        capabilities: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>;
        defaultCompletionOptions: z.ZodOptional<z.ZodObject<{
            contextLength: z.ZodOptional<z.ZodNumber>;
            maxTokens: z.ZodOptional<z.ZodNumber>;
            temperature: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
            minP: z.ZodOptional<z.ZodNumber>;
            presencePenalty: z.ZodOptional<z.ZodNumber>;
            frequencyPenalty: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            n: z.ZodOptional<z.ZodNumber>;
            reasoning: z.ZodOptional<z.ZodBoolean>;
            reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
            promptCaching: z.ZodOptional<z.ZodBoolean>;
            stream: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }>>;
        cacheBehavior: z.ZodOptional<z.ZodObject<{
            cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
            cacheConversation: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }>>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        embedOptions: z.ZodOptional<z.ZodObject<{
            maxChunkSize: z.ZodOptional<z.ZodNumber>;
            maxBatchSize: z.ZodOptional<z.ZodNumber>;
            embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }>>;
        chatOptions: z.ZodOptional<z.ZodObject<{
            baseSystemMessage: z.ZodOptional<z.ZodString>;
            baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
            basePlanSystemMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }>>;
        promptTemplates: z.ZodOptional<z.ZodObject<{
            apply: z.ZodOptional<z.ZodString>;
            chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
            edit: z.ZodOptional<z.ZodString>;
            autocomplete: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }>>;
        useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>;
        autocompleteOptions: z.ZodOptional<z.ZodObject<{
            disable: z.ZodOptional<z.ZodBoolean>;
            maxPromptTokens: z.ZodOptional<z.ZodNumber>;
            debounceDelay: z.ZodOptional<z.ZodNumber>;
            modelTimeout: z.ZodOptional<z.ZodNumber>;
            maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
            prefixPercentage: z.ZodOptional<z.ZodNumber>;
            template: z.ZodOptional<z.ZodString>;
            onlyMyCode: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }, {
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }>, z.ZodObject<{
        provider: z.ZodEffects<z.ZodString, string, string>;
        name: z.ZodString;
        model: z.ZodString;
        apiKey: z.ZodOptional<z.ZodString>;
        apiBase: z.ZodOptional<z.ZodString>;
        maxStopWords: z.ZodOptional<z.ZodNumber>;
        roles: z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>;
        capabilities: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>;
        defaultCompletionOptions: z.ZodOptional<z.ZodObject<{
            contextLength: z.ZodOptional<z.ZodNumber>;
            maxTokens: z.ZodOptional<z.ZodNumber>;
            temperature: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
            minP: z.ZodOptional<z.ZodNumber>;
            presencePenalty: z.ZodOptional<z.ZodNumber>;
            frequencyPenalty: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            n: z.ZodOptional<z.ZodNumber>;
            reasoning: z.ZodOptional<z.ZodBoolean>;
            reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
            promptCaching: z.ZodOptional<z.ZodBoolean>;
            stream: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }>>;
        cacheBehavior: z.ZodOptional<z.ZodObject<{
            cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
            cacheConversation: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }>>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        embedOptions: z.ZodOptional<z.ZodObject<{
            maxChunkSize: z.ZodOptional<z.ZodNumber>;
            maxBatchSize: z.ZodOptional<z.ZodNumber>;
            embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }>>;
        chatOptions: z.ZodOptional<z.ZodObject<{
            baseSystemMessage: z.ZodOptional<z.ZodString>;
            baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
            basePlanSystemMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }>>;
        promptTemplates: z.ZodOptional<z.ZodObject<{
            apply: z.ZodOptional<z.ZodString>;
            chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
            edit: z.ZodOptional<z.ZodString>;
            autocomplete: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }>>;
        useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>;
        autocompleteOptions: z.ZodOptional<z.ZodObject<{
            disable: z.ZodOptional<z.ZodBoolean>;
            maxPromptTokens: z.ZodOptional<z.ZodNumber>;
            debounceDelay: z.ZodOptional<z.ZodNumber>;
            modelTimeout: z.ZodOptional<z.ZodNumber>;
            maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
            prefixPercentage: z.ZodOptional<z.ZodNumber>;
            template: z.ZodOptional<z.ZodString>;
            onlyMyCode: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }, {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }>]>, "many">;
}, "strip", z.ZodTypeAny, {
    models: ({
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    })[];
}, {
    models: ({
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    })[];
}>, z.ZodObject<{
    context: z.ZodArray<z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        provider: z.ZodString;
        params: z.ZodOptional<z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        provider: string;
        params?: any;
        name?: string | undefined;
    }, {
        provider: string;
        params?: any;
        name?: string | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    context: {
        provider: string;
        params?: any;
        name?: string | undefined;
    }[];
}, {
    context: {
        provider: string;
        params?: any;
        name?: string | undefined;
    }[];
}>, z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        destination: z.ZodString;
        schema: z.ZodString;
        level: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"all">, z.ZodLiteral<"noCode">]>>;
        events: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        apiKey: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }, {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    data: {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }[];
}, {
    data: {
        name: string;
        schema: string;
        destination: string;
        apiKey?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        level?: "all" | "noCode" | undefined;
        events?: string[] | undefined;
    }[];
}>, z.ZodObject<{
    mcpServers: z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        command: z.ZodOptional<z.ZodString>;
        type: z.ZodOptional<z.ZodEnum<["sse", "stdio", "streamable-http"]>>;
        url: z.ZodOptional<z.ZodString>;
        faviconUrl: z.ZodOptional<z.ZodString>;
        args: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        cwd: z.ZodOptional<z.ZodString>;
        connectionTimeout: z.ZodOptional<z.ZodNumber>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }, {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    mcpServers: {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }[];
}, {
    mcpServers: {
        name: string;
        type?: "sse" | "stdio" | "streamable-http" | undefined;
        url?: string | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        env?: Record<string, string> | undefined;
        command?: string | undefined;
        faviconUrl?: string | undefined;
        args?: string[] | undefined;
        cwd?: string | undefined;
        connectionTimeout?: number | undefined;
    }[];
}>, z.ZodObject<{
    rules: z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodObject<{
        name: z.ZodString;
        rule: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        globs: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        regex: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        alwaysApply: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }, {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }>]>, "many">;
}, "strip", z.ZodTypeAny, {
    rules: (string | {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    })[];
}, {
    rules: (string | {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    })[];
}>, z.ZodObject<{
    prompts: z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        prompt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        prompt: string;
        description?: string | undefined;
    }, {
        name: string;
        prompt: string;
        description?: string | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    prompts: {
        name: string;
        prompt: string;
        description?: string | undefined;
    }[];
}, {
    prompts: {
        name: string;
        prompt: string;
        description?: string | undefined;
    }[];
}>, z.ZodObject<{
    docs: z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        startUrl: z.ZodString;
        rootUrl: z.ZodOptional<z.ZodString>;
        faviconUrl: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }, {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    docs: {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }[];
}, {
    docs: {
        name: string;
        startUrl: string;
        faviconUrl?: string | undefined;
        rootUrl?: string | undefined;
    }[];
}>]>>;
export type Block = z.infer<typeof blockSchema>;
export declare const continueCommandSchema: z.ZodObject<{
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    prompt: z.ZodString;
    placeholders: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    context: z.ZodOptional<z.ZodString>;
    contextWindowSize: z.ZodOptional<z.ZodNumber>;
    model: z.ZodOptional<z.ZodString>;
    systemMessage: z.ZodOptional<z.ZodString>;
    slashCommand: z.ZodOptional<z.ZodString>;
    hideFromCommandPalette: z.ZodOptional<z.ZodBoolean>;
    hideFromSlashCommands: z.ZodOptional<z.ZodBoolean>;
    mode: z.ZodOptional<z.ZodEnum<["insert", "replace", "diff"]>>;
    addEnhancedContext: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    name: string;
    prompt: string;
    model?: string | undefined;
    context?: string | undefined;
    description?: string | undefined;
    placeholders?: string[] | undefined;
    contextWindowSize?: number | undefined;
    systemMessage?: string | undefined;
    slashCommand?: string | undefined;
    hideFromCommandPalette?: boolean | undefined;
    hideFromSlashCommands?: boolean | undefined;
    mode?: "diff" | "insert" | "replace" | undefined;
    addEnhancedContext?: boolean | undefined;
}, {
    name: string;
    prompt: string;
    model?: string | undefined;
    context?: string | undefined;
    description?: string | undefined;
    placeholders?: string[] | undefined;
    contextWindowSize?: number | undefined;
    systemMessage?: string | undefined;
    slashCommand?: string | undefined;
    hideFromCommandPalette?: boolean | undefined;
    hideFromSlashCommands?: boolean | undefined;
    mode?: "diff" | "insert" | "replace" | undefined;
    addEnhancedContext?: boolean | undefined;
}>;
export declare const languageMarkerSchema: z.ZodObject<{
    language: z.ZodString;
    markers: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    language: string;
    markers: string[];
}, {
    language: string;
    markers: string[];
}>;
export declare const sidebarSchema: z.ZodObject<{
    enabled: z.ZodOptional<z.ZodBoolean>;
    defaultOpen: z.ZodOptional<z.ZodBoolean>;
    defaultWidth: z.ZodOptional<z.ZodNumber>;
    showButtonsThreshold: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    enabled?: boolean | undefined;
    defaultOpen?: boolean | undefined;
    defaultWidth?: number | undefined;
    showButtonsThreshold?: number | undefined;
}, {
    enabled?: boolean | undefined;
    defaultOpen?: boolean | undefined;
    defaultWidth?: number | undefined;
    showButtonsThreshold?: number | undefined;
}>;
export declare const autoindentExtensionsSchema: z.ZodArray<z.ZodString, "many">;
export declare const configSchema: z.ZodObject<{
    models: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
        provider: z.ZodLiteral<"continue-proxy">;
        apiKeyLocation: z.ZodOptional<z.ZodString>;
        envSecretLocations: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        orgScopeId: z.ZodNullable<z.ZodString>;
        onPremProxyUrl: z.ZodNullable<z.ZodString>;
        name: z.ZodString;
        model: z.ZodString;
        apiKey: z.ZodOptional<z.ZodString>;
        apiBase: z.ZodOptional<z.ZodString>;
        maxStopWords: z.ZodOptional<z.ZodNumber>;
        roles: z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>;
        capabilities: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>;
        defaultCompletionOptions: z.ZodOptional<z.ZodObject<{
            contextLength: z.ZodOptional<z.ZodNumber>;
            maxTokens: z.ZodOptional<z.ZodNumber>;
            temperature: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
            minP: z.ZodOptional<z.ZodNumber>;
            presencePenalty: z.ZodOptional<z.ZodNumber>;
            frequencyPenalty: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            n: z.ZodOptional<z.ZodNumber>;
            reasoning: z.ZodOptional<z.ZodBoolean>;
            reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
            promptCaching: z.ZodOptional<z.ZodBoolean>;
            stream: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }>>;
        cacheBehavior: z.ZodOptional<z.ZodObject<{
            cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
            cacheConversation: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }>>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        embedOptions: z.ZodOptional<z.ZodObject<{
            maxChunkSize: z.ZodOptional<z.ZodNumber>;
            maxBatchSize: z.ZodOptional<z.ZodNumber>;
            embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }>>;
        chatOptions: z.ZodOptional<z.ZodObject<{
            baseSystemMessage: z.ZodOptional<z.ZodString>;
            baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
            basePlanSystemMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }>>;
        promptTemplates: z.ZodOptional<z.ZodObject<{
            apply: z.ZodOptional<z.ZodString>;
            chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
            edit: z.ZodOptional<z.ZodString>;
            autocomplete: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }>>;
        useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>;
        autocompleteOptions: z.ZodOptional<z.ZodObject<{
            disable: z.ZodOptional<z.ZodBoolean>;
            maxPromptTokens: z.ZodOptional<z.ZodNumber>;
            debounceDelay: z.ZodOptional<z.ZodNumber>;
            modelTimeout: z.ZodOptional<z.ZodNumber>;
            maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
            prefixPercentage: z.ZodOptional<z.ZodNumber>;
            template: z.ZodOptional<z.ZodString>;
            onlyMyCode: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }, {
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }>, z.ZodObject<{
        provider: z.ZodEffects<z.ZodString, string, string>;
        name: z.ZodString;
        model: z.ZodString;
        apiKey: z.ZodOptional<z.ZodString>;
        apiBase: z.ZodOptional<z.ZodString>;
        maxStopWords: z.ZodOptional<z.ZodNumber>;
        roles: z.ZodOptional<z.ZodArray<z.ZodEnum<["chat", "autocomplete", "embed", "rerank", "edit", "apply", "summarize"]>, "many">>;
        capabilities: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"tool_use">, z.ZodLiteral<"image_input">]>, "many">>;
        defaultCompletionOptions: z.ZodOptional<z.ZodObject<{
            contextLength: z.ZodOptional<z.ZodNumber>;
            maxTokens: z.ZodOptional<z.ZodNumber>;
            temperature: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
            minP: z.ZodOptional<z.ZodNumber>;
            presencePenalty: z.ZodOptional<z.ZodNumber>;
            frequencyPenalty: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            n: z.ZodOptional<z.ZodNumber>;
            reasoning: z.ZodOptional<z.ZodBoolean>;
            reasoningBudgetTokens: z.ZodOptional<z.ZodNumber>;
            promptCaching: z.ZodOptional<z.ZodBoolean>;
            stream: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }, {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        }>>;
        cacheBehavior: z.ZodOptional<z.ZodObject<{
            cacheSystemMessage: z.ZodOptional<z.ZodBoolean>;
            cacheConversation: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }, {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        }>>;
        requestOptions: z.ZodOptional<z.ZodObject<{
            timeout: z.ZodOptional<z.ZodNumber>;
            verifySsl: z.ZodOptional<z.ZodBoolean>;
            caBundlePath: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            proxy: z.ZodOptional<z.ZodString>;
            headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            extraBodyProperties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
            noProxy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            clientCertificate: z.ZodOptional<z.ZodObject<{
                cert: z.ZodString;
                key: z.ZodString;
                passphrase: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }, {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }, {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        }>>;
        embedOptions: z.ZodOptional<z.ZodObject<{
            maxChunkSize: z.ZodOptional<z.ZodNumber>;
            maxBatchSize: z.ZodOptional<z.ZodNumber>;
            embeddingPrefixes: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"chunk">, z.ZodLiteral<"query">]>, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }, {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        }>>;
        chatOptions: z.ZodOptional<z.ZodObject<{
            baseSystemMessage: z.ZodOptional<z.ZodString>;
            baseAgentSystemMessage: z.ZodOptional<z.ZodString>;
            basePlanSystemMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }, {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        }>>;
        promptTemplates: z.ZodOptional<z.ZodObject<{
            apply: z.ZodOptional<z.ZodString>;
            chat: z.ZodOptional<z.ZodEnum<["llama2", "alpaca", "zephyr", "phi2", "phind", "anthropic", "chatml", "none", "openchat", "deepseek", "xwin-coder", "neural-chat", "codellama-70b", "llava", "gemma", "granite", "llama3", "codestral"]>>;
            edit: z.ZodOptional<z.ZodString>;
            autocomplete: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }, {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        }>>;
        useLegacyCompletionsEndpoint: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodBoolean, z.ZodNumber]>>>;
        autocompleteOptions: z.ZodOptional<z.ZodObject<{
            disable: z.ZodOptional<z.ZodBoolean>;
            maxPromptTokens: z.ZodOptional<z.ZodNumber>;
            debounceDelay: z.ZodOptional<z.ZodNumber>;
            modelTimeout: z.ZodOptional<z.ZodNumber>;
            maxSuffixPercentage: z.ZodOptional<z.ZodNumber>;
            prefixPercentage: z.ZodOptional<z.ZodNumber>;
            template: z.ZodOptional<z.ZodString>;
            onlyMyCode: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }, {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }, {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    }>]>, "many">>;
    defaultModel: z.ZodOptional<z.ZodString>;
    defaultRecentMessages: z.ZodOptional<z.ZodNumber>;
    commands: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        prompt: z.ZodString;
        placeholders: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        context: z.ZodOptional<z.ZodString>;
        contextWindowSize: z.ZodOptional<z.ZodNumber>;
        model: z.ZodOptional<z.ZodString>;
        systemMessage: z.ZodOptional<z.ZodString>;
        slashCommand: z.ZodOptional<z.ZodString>;
        hideFromCommandPalette: z.ZodOptional<z.ZodBoolean>;
        hideFromSlashCommands: z.ZodOptional<z.ZodBoolean>;
        mode: z.ZodOptional<z.ZodEnum<["insert", "replace", "diff"]>>;
        addEnhancedContext: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        prompt: string;
        model?: string | undefined;
        context?: string | undefined;
        description?: string | undefined;
        placeholders?: string[] | undefined;
        contextWindowSize?: number | undefined;
        systemMessage?: string | undefined;
        slashCommand?: string | undefined;
        hideFromCommandPalette?: boolean | undefined;
        hideFromSlashCommands?: boolean | undefined;
        mode?: "diff" | "insert" | "replace" | undefined;
        addEnhancedContext?: boolean | undefined;
    }, {
        name: string;
        prompt: string;
        model?: string | undefined;
        context?: string | undefined;
        description?: string | undefined;
        placeholders?: string[] | undefined;
        contextWindowSize?: number | undefined;
        systemMessage?: string | undefined;
        slashCommand?: string | undefined;
        hideFromCommandPalette?: boolean | undefined;
        hideFromSlashCommands?: boolean | undefined;
        mode?: "diff" | "insert" | "replace" | undefined;
        addEnhancedContext?: boolean | undefined;
    }>, "many">>;
    tools: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodString;
        defaultIcon: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        description: string;
        defaultIcon?: string | undefined;
    }, {
        name: string;
        description: string;
        defaultIcon?: string | undefined;
    }>, "many">>;
    contextProviders: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
    langMarkers: z.ZodOptional<z.ZodArray<z.ZodObject<{
        language: z.ZodString;
        markers: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        language: string;
        markers: string[];
    }, {
        language: string;
        markers: string[];
    }>, "many">>;
    sidebar: z.ZodOptional<z.ZodObject<{
        enabled: z.ZodOptional<z.ZodBoolean>;
        defaultOpen: z.ZodOptional<z.ZodBoolean>;
        defaultWidth: z.ZodOptional<z.ZodNumber>;
        showButtonsThreshold: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        enabled?: boolean | undefined;
        defaultOpen?: boolean | undefined;
        defaultWidth?: number | undefined;
        showButtonsThreshold?: number | undefined;
    }, {
        enabled?: boolean | undefined;
        defaultOpen?: boolean | undefined;
        defaultWidth?: number | undefined;
        showButtonsThreshold?: number | undefined;
    }>>;
    tabAutocompleteModel: z.ZodOptional<z.ZodString>;
    rules: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        rule: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        globs: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        regex: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        alwaysApply: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }, {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }>, "many">>;
    doneWithBannerForever: z.ZodOptional<z.ZodBoolean>;
    autoindentExtensions: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    proxy: z.ZodOptional<z.ZodString>;
    api_base: z.ZodOptional<z.ZodString>;
    api_key: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    proxy?: string | undefined;
    tools?: {
        name: string;
        description: string;
        defaultIcon?: string | undefined;
    }[] | undefined;
    rules?: {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }[] | undefined;
    models?: ({
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    })[] | undefined;
    defaultModel?: string | undefined;
    defaultRecentMessages?: number | undefined;
    commands?: {
        name: string;
        prompt: string;
        model?: string | undefined;
        context?: string | undefined;
        description?: string | undefined;
        placeholders?: string[] | undefined;
        contextWindowSize?: number | undefined;
        systemMessage?: string | undefined;
        slashCommand?: string | undefined;
        hideFromCommandPalette?: boolean | undefined;
        hideFromSlashCommands?: boolean | undefined;
        mode?: "diff" | "insert" | "replace" | undefined;
        addEnhancedContext?: boolean | undefined;
    }[] | undefined;
    contextProviders?: any[] | undefined;
    langMarkers?: {
        language: string;
        markers: string[];
    }[] | undefined;
    sidebar?: {
        enabled?: boolean | undefined;
        defaultOpen?: boolean | undefined;
        defaultWidth?: number | undefined;
        showButtonsThreshold?: number | undefined;
    } | undefined;
    tabAutocompleteModel?: string | undefined;
    doneWithBannerForever?: boolean | undefined;
    autoindentExtensions?: string[] | undefined;
    api_base?: string | undefined;
    api_key?: string | undefined;
}, {
    proxy?: string | undefined;
    tools?: {
        name: string;
        description: string;
        defaultIcon?: string | undefined;
    }[] | undefined;
    rules?: {
        name: string;
        rule: string;
        regex?: string | string[] | undefined;
        description?: string | undefined;
        globs?: string | string[] | undefined;
        alwaysApply?: boolean | undefined;
    }[] | undefined;
    models?: ({
        provider: "continue-proxy";
        orgScopeId: string | null;
        onPremProxyUrl: string | null;
        name: string;
        model: string;
        apiKeyLocation?: string | undefined;
        envSecretLocations?: Record<string, string> | undefined;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    } | {
        provider: string;
        name: string;
        model: string;
        apiKey?: string | undefined;
        apiBase?: string | undefined;
        maxStopWords?: number | undefined;
        roles?: ("chat" | "autocomplete" | "embed" | "rerank" | "edit" | "apply" | "summarize")[] | undefined;
        capabilities?: ("tool_use" | "image_input")[] | undefined;
        defaultCompletionOptions?: {
            contextLength?: number | undefined;
            maxTokens?: number | undefined;
            temperature?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
            minP?: number | undefined;
            presencePenalty?: number | undefined;
            frequencyPenalty?: number | undefined;
            stop?: string[] | undefined;
            n?: number | undefined;
            reasoning?: boolean | undefined;
            reasoningBudgetTokens?: number | undefined;
            promptCaching?: boolean | undefined;
            stream?: boolean | undefined;
        } | undefined;
        cacheBehavior?: {
            cacheSystemMessage?: boolean | undefined;
            cacheConversation?: boolean | undefined;
        } | undefined;
        requestOptions?: {
            timeout?: number | undefined;
            verifySsl?: boolean | undefined;
            caBundlePath?: string | string[] | undefined;
            proxy?: string | undefined;
            headers?: Record<string, string> | undefined;
            extraBodyProperties?: Record<string, any> | undefined;
            noProxy?: string[] | undefined;
            clientCertificate?: {
                cert: string;
                key: string;
                passphrase?: string | undefined;
            } | undefined;
        } | undefined;
        embedOptions?: {
            maxChunkSize?: number | undefined;
            maxBatchSize?: number | undefined;
            embeddingPrefixes?: Partial<Record<"chunk" | "query", string>> | undefined;
        } | undefined;
        chatOptions?: {
            baseSystemMessage?: string | undefined;
            baseAgentSystemMessage?: string | undefined;
            basePlanSystemMessage?: string | undefined;
        } | undefined;
        promptTemplates?: {
            chat?: "llama2" | "alpaca" | "zephyr" | "phi2" | "phind" | "anthropic" | "chatml" | "none" | "openchat" | "deepseek" | "xwin-coder" | "neural-chat" | "codellama-70b" | "llava" | "gemma" | "granite" | "llama3" | "codestral" | undefined;
            autocomplete?: string | undefined;
            edit?: string | undefined;
            apply?: string | undefined;
        } | undefined;
        useLegacyCompletionsEndpoint?: boolean | undefined;
        env?: Record<string, string | number | boolean> | undefined;
        autocompleteOptions?: {
            disable?: boolean | undefined;
            maxPromptTokens?: number | undefined;
            debounceDelay?: number | undefined;
            modelTimeout?: number | undefined;
            maxSuffixPercentage?: number | undefined;
            prefixPercentage?: number | undefined;
            template?: string | undefined;
            onlyMyCode?: boolean | undefined;
        } | undefined;
    })[] | undefined;
    defaultModel?: string | undefined;
    defaultRecentMessages?: number | undefined;
    commands?: {
        name: string;
        prompt: string;
        model?: string | undefined;
        context?: string | undefined;
        description?: string | undefined;
        placeholders?: string[] | undefined;
        contextWindowSize?: number | undefined;
        systemMessage?: string | undefined;
        slashCommand?: string | undefined;
        hideFromCommandPalette?: boolean | undefined;
        hideFromSlashCommands?: boolean | undefined;
        mode?: "diff" | "insert" | "replace" | undefined;
        addEnhancedContext?: boolean | undefined;
    }[] | undefined;
    contextProviders?: any[] | undefined;
    langMarkers?: {
        language: string;
        markers: string[];
    }[] | undefined;
    sidebar?: {
        enabled?: boolean | undefined;
        defaultOpen?: boolean | undefined;
        defaultWidth?: number | undefined;
        showButtonsThreshold?: number | undefined;
    } | undefined;
    tabAutocompleteModel?: string | undefined;
    doneWithBannerForever?: boolean | undefined;
    autoindentExtensions?: string[] | undefined;
    api_base?: string | undefined;
    api_key?: string | undefined;
}>;
export type Config = z.infer<typeof configSchema>;
export {};
