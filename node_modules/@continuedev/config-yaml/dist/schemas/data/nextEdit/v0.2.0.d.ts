export declare const nextEditEventSchema_0_2_0: import("zod").ZodObject<Pick<import("zod").objectUtil.extendShape<{
    eventName: import("zod").ZodString;
    schema: import("zod").ZodString;
    timestamp: import("zod").ZodString;
    userId: import("zod").ZodString;
    userAgent: import("zod").ZodString;
    selectedProfileId: import("zod").ZodString;
}, {
    fileURI: import("zod").ZodString;
    workspaceDirURI: import("zod").ZodString;
    beforeContent: import("zod").ZodString;
    afterContent: import("zod").ZodString;
    beforeCursorPos: import("zod").ZodObject<{
        line: import("zod").ZodNumber;
        character: import("zod").ZodNumber;
    }, "strip", import("zod").ZodTypeAny, {
        line: number;
        character: number;
    }, {
        line: number;
        character: number;
    }>;
    afterCursorPos: import("zod").ZodObject<{
        line: import("zod").ZodNumber;
        character: import("zod").ZodNumber;
    }, "strip", import("zod").ZodTypeAny, {
        line: number;
        character: number;
    }, {
        line: number;
        character: number;
    }>;
    context: import("zod").ZodString;
}>, "eventName" | "schema" | "timestamp" | "userId" | "userAgent" | "selectedProfileId" | "fileURI" | "workspaceDirURI" | "beforeContent" | "afterContent" | "beforeCursorPos" | "afterCursorPos" | "context">, "strip", import("zod").ZodTypeAny, {
    eventName: string;
    schema: string;
    timestamp: string;
    userId: string;
    userAgent: string;
    selectedProfileId: string;
    fileURI: string;
    workspaceDirURI: string;
    beforeContent: string;
    afterContent: string;
    beforeCursorPos: {
        line: number;
        character: number;
    };
    afterCursorPos: {
        line: number;
        character: number;
    };
    context: string;
}, {
    eventName: string;
    schema: string;
    timestamp: string;
    userId: string;
    userAgent: string;
    selectedProfileId: string;
    fileURI: string;
    workspaceDirURI: string;
    beforeContent: string;
    afterContent: string;
    beforeCursorPos: {
        line: number;
        character: number;
    };
    afterCursorPos: {
        line: number;
        character: number;
    };
    context: string;
}>;
export declare const nextEditEventSchema_0_2_0_noCode: import("zod").ZodObject<Omit<Pick<import("zod").objectUtil.extendShape<{
    eventName: import("zod").ZodString;
    schema: import("zod").ZodString;
    timestamp: import("zod").ZodString;
    userId: import("zod").ZodString;
    userAgent: import("zod").ZodString;
    selectedProfileId: import("zod").ZodString;
}, {
    fileURI: import("zod").ZodString;
    workspaceDirURI: import("zod").ZodString;
    beforeContent: import("zod").ZodString;
    afterContent: import("zod").ZodString;
    beforeCursorPos: import("zod").ZodObject<{
        line: import("zod").ZodNumber;
        character: import("zod").ZodNumber;
    }, "strip", import("zod").ZodTypeAny, {
        line: number;
        character: number;
    }, {
        line: number;
        character: number;
    }>;
    afterCursorPos: import("zod").ZodObject<{
        line: import("zod").ZodNumber;
        character: import("zod").ZodNumber;
    }, "strip", import("zod").ZodTypeAny, {
        line: number;
        character: number;
    }, {
        line: number;
        character: number;
    }>;
    context: import("zod").ZodString;
}>, "eventName" | "schema" | "timestamp" | "userId" | "userAgent" | "selectedProfileId" | "fileURI" | "workspaceDirURI" | "beforeContent" | "afterContent" | "beforeCursorPos" | "afterCursorPos" | "context">, "fileURI" | "workspaceDirURI" | "beforeContent" | "afterContent" | "context">, "strip", import("zod").ZodTypeAny, {
    eventName: string;
    schema: string;
    timestamp: string;
    userId: string;
    userAgent: string;
    selectedProfileId: string;
    beforeCursorPos: {
        line: number;
        character: number;
    };
    afterCursorPos: {
        line: number;
        character: number;
    };
}, {
    eventName: string;
    schema: string;
    timestamp: string;
    userId: string;
    userAgent: string;
    selectedProfileId: string;
    beforeCursorPos: {
        line: number;
        character: number;
    };
    afterCursorPos: {
        line: number;
        character: number;
    };
}>;
