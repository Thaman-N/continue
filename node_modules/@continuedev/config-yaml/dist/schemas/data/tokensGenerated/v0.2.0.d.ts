export declare const tokensGeneratedEventSchema_0_2_0: import("zod").ZodObject<Pick<import("zod").objectUtil.extendShape<{
    eventName: import("zod").ZodString;
    schema: import("zod").ZodString;
    timestamp: import("zod").ZodString;
    userId: import("zod").ZodString;
    userAgent: import("zod").ZodString;
    selectedProfileId: import("zod").ZodString;
}, {
    model: import("zod").ZodString;
    provider: import("zod").ZodString;
    promptTokens: import("zod").ZodNumber;
    generatedTokens: import("zod").ZodNumber;
}>, "provider" | "model" | "eventName" | "schema" | "timestamp" | "userId" | "userAgent" | "selectedProfileId" | "promptTokens" | "generatedTokens">, "strip", import("zod").ZodTypeAny, {
    provider: string;
    model: string;
    eventName: string;
    schema: string;
    timestamp: string;
    userId: string;
    userAgent: string;
    selectedProfileId: string;
    promptTokens: number;
    generatedTokens: number;
}, {
    provider: string;
    model: string;
    eventName: string;
    schema: string;
    timestamp: string;
    userId: string;
    userAgent: string;
    selectedProfileId: string;
    promptTokens: number;
    generatedTokens: number;
}>;
export declare const tokensGeneratedEventSchema_0_2_0_noCode: import("zod").ZodObject<Pick<import("zod").objectUtil.extendShape<{
    eventName: import("zod").ZodString;
    schema: import("zod").ZodString;
    timestamp: import("zod").ZodString;
    userId: import("zod").ZodString;
    userAgent: import("zod").ZodString;
    selectedProfileId: import("zod").ZodString;
}, {
    model: import("zod").ZodString;
    provider: import("zod").ZodString;
    promptTokens: import("zod").ZodNumber;
    generatedTokens: import("zod").ZodNumber;
}>, "provider" | "model" | "eventName" | "schema" | "timestamp" | "userId" | "userAgent" | "selectedProfileId" | "promptTokens" | "generatedTokens">, "strip", import("zod").ZodTypeAny, {
    provider: string;
    model: string;
    eventName: string;
    schema: string;
    timestamp: string;
    userId: string;
    userAgent: string;
    selectedProfileId: string;
    promptTokens: number;
    generatedTokens: number;
}, {
    provider: string;
    model: string;
    eventName: string;
    schema: string;
    timestamp: string;
    userId: string;
    userAgent: string;
    selectedProfileId: string;
    promptTokens: number;
    generatedTokens: number;
}>;
